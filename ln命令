linux使用ext4文件系統
分區主要分爲兩大部分：小部分保存文件inode信息，大部分保存block信息
inode默認大小爲128Byte，用來記錄文件權限（r、w、x）、文件所有者和屬組、文件大小、ctime、atime、mtime、文件數據真正保存的block編號。
每個文件需佔用一個inode
inode中不記錄文件名，文件名記錄在文件所在目錄的block中

block默認爲4kb，用於實際的數據存儲，如果一個block放不下數據，則可佔用多個block
10kb需存儲，則佔用3個block，最後一個block未佔滿，但也不能再放入其他文件數據；這三個block可能是連續的，也可能是分散的

如果想要讀取文件內容，必須借助目錄中記錄的文件名找到該文件的inode，才能成功找到文件內容所在的block塊

軟鏈接：類似windows給文件創建的快捷方式，產生一個特殊的文件，該文件用來指向另一個文件。此鏈接方式同樣適用與目錄
硬鏈接：給一個文件的inode分配多個文件名，通過任何一個文件名都可以找到此文件的inode，從而讀取該文件的數據信息

ln [選項] 源文件 目標文件

-s：建立軟鏈接文件（默認建立硬鏈接文件
-f：強制。如果目標文件以存在，則刪除目標文件後再建立鏈接文件

軟鏈接文件的源文件必須寫成絕對路徑，不能寫出相對路徑（硬鏈接沒有這樣的要求）；否則軟鏈接文件會報錯。

在inode信息中，不會記錄文件名稱，而是把文件名記錄在上級目錄的block中，即 目錄的block中記錄的是這個目錄下所有一級子文件和子目錄的文件名及inode的對應;
而文件的block中記錄的才是文件的實際數據

硬鏈接特點：
硬鏈接不能跨文件系統（分區）建立，因爲在不同的文件系統中，inode號是重新計算的
硬鏈接不能鏈接目錄，因爲如果給目錄建立硬鏈接，那麼不僅目錄本身需要重新建立，目錄下的所有子文件都需要建立硬鏈接，這對當前的linux來講過於復雜

硬鏈接並不常用

軟鏈接和源文件的inode號不一致，軟鏈接通過->明顯地標識出源文件的位置

軟鏈接可以鏈接目錄，也可以跨分區

軟鏈接的block中沒有實際數據，僅有源文件的inode號

