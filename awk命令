和sed類似，awk也是逐行掃描文件，尋找含有目標文本的行，如果匹配成功，則會在該行執行用戶想要的操作

awk [選項] ‘腳本命令’ 文件名

-F fs 指定以fs作爲輸入行的分隔符，默認分隔符爲空格或制表符
-f file 從腳本文件中讀取awk腳本指令，以取代直接在命令行中輸入指令
-v var=val 在執行處理過程之前，設置一個變量var，並給其設備初始值爲val

awk的強大之處在於腳本命令，由兩部分組成，
‘匹配規則{執行命令}’
這裏的匹配規則，和sed命令中的address部分作用相同
awk '/^$/{print "Blank line"}' test.txt

*************awk使用數據字段變量***********
awk的主要特性之一是其處理文本文件中數據的能力，它會自動給一行中那個的每個數據元素分配一個變量。

默認
$0  代表整個文本行
$1  代表文本行中的第1個數據字段
$2  代表文本行中的第2個數據字段
$n  代表文本行中的第n個數據字段
默認的字段分隔符是任意的空白字符（如空格或制表符）
awk在讀取一行文本時，會用預定義的字段分隔符劃分每個字段
可結合-F選項

**********awk腳本命令使用多個命令*********
awk允許將多條命令組合成一個正常的程序。在命令之間放個分號
echo "My name is Rich"|awk '{$4="peppa";print $0}' 
My name is peppa
第一條命令給字段變量$4賦值。第二條命令會打印整個數據字段
如果沒有在命令行中指定文件名，awk程序需要用戶輸入獲得數據

********awk從文件中讀取程序********
在程序中，可以指定多條命令，只要一條命令放一行即可，之間不需分號

********awk BEGIN 關鍵字**********
指定腳本命令的運行時機
BEGIN會強制awk在讀取數據前執行該關鍵字後指定的腳本命令
awk ‘BEGIN{print “The data3 File contents:"}
>{print $0}' data3.txt
********awk END 關鍵字**********
指定一些腳本命令，awk會在讀完數據後執行他們



