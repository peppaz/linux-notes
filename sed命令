vim：交互式文本編輯模式，可以使用鍵盤命令交互性地插入、刪除或替換數據中的文本
sed：流編輯模式，在處理數據之前，需要預先提供一組規則，sed會按照此規則編輯數據

sed會根據腳本命令來處理文本文件中的數據，這些命令要麼從命令行輸入，要麼存儲在一個文本文件中
1.每次僅讀取一行內容
2.根據提供的規則命令匹配並修改數據。*sed默認不會直接修改源文件數據，而是將數據復制到緩衝區中，修改也僅限於緩衝區中的數據
3.將執行結果輸出
當一行數據匹配完成後，會繼續讀取下一行數據

sed [選項][腳本命令] 文件名

-e 腳本命令：將其後跟的腳本命令添加到已有的命令中
-f 腳本命令文件： 同-e
-n 屏蔽默認輸出，需使用print命令來完成輸出
-i 直接修改源文件，慎用

************sed腳本命令**************
sed s 替換腳本命令
[address]s/pattern/replacement/flags

sed d 刪除腳本命令
[address]d
刪除指定行中哦哦那個的所有內容，如果忘記指定行，文件中所有內容都會刪除
**在默認情況下，sed並不會修改原始文件，這裏被刪除的行只是從sed的輸出中消失了，原始文件沒做任何改變

sed a 在指定行後面附加一行
sed i 在指定行前面插入一行
[address]a(或i) \新文本內容
如果想添加多行數據，只需對要插入或附加的文本中每一行末尾（除最後一行）添加反斜線

sed c 替換腳本命令
將指定行中的所有內容，替換成該選項後的字符串
[address]c\用於替換的新文本

sed y 轉換腳本命令
y转换命令是唯一可以处理单个字符的sed脚本命令
[address]y/inchars/outchars/
转换命令会对inchars和outchars值进行一对一的映射，即inchars中的第一个字符会被转换为outchars中的第一个字符，第二个字符会被转换成outchars中的第二个字符..
该映射过程会一直持续到处理完指定字符。如果inchars和outchars长度不同，则sed会产生一条错误信息
inchars模式中指定字符的每个实例都会被替换成outchars模式中相同位置的那个字符
是一个全局命令

sed p 打印脚本命令
搜索符合條件的行，並輸出該行的內容
-n選項和p命令配合使用，可以禁止輸出其他行，只打印包含匹配文本模式的行

sed w
將文本中指定行的內容寫入文件中
[address]w filename

sed r 
將一個獨立文件的數據插入到當前數據流的指定位置

sed q
在第一次匹配任務結束後，退出sed程序，不再進行對後續數據的處理
